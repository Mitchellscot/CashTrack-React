// <auto-generated />
using System;
using CashTrack.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CashTrack.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CashTrack.Data.Entities.ExpenseMainCategories", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("main_category_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("id");

                    b.ToTable("expense_main_categories");
                });

            modelBuilder.Entity("CashTrack.Data.Entities.Expenses", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<decimal>("amount")
                        .HasColumnType("numeric");

                    b.Property<int?>("categoryid")
                        .HasColumnType("integer");

                    b.Property<bool>("exclude_from_statistics")
                        .HasColumnType("boolean");

                    b.Property<int?>("merchantid")
                        .HasColumnType("integer");

                    b.Property<string>("notes")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<DateTimeOffset>("purchase_date")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("id");

                    b.HasIndex("categoryid");

                    b.HasIndex("merchantid");

                    b.ToTable("expenses");
                });

            modelBuilder.Entity("CashTrack.Data.Entities.ExpenseSubCategories", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<bool>("in_use")
                        .HasColumnType("boolean");

                    b.Property<int?>("main_categoryid")
                        .HasColumnType("integer");

                    b.Property<string>("sub_category_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("id");

                    b.HasIndex("main_categoryid");

                    b.ToTable("expense_sub_categories");
                });

            modelBuilder.Entity("CashTrack.Data.Entities.ExpenseTags", b =>
                {
                    b.Property<int>("expense_id")
                        .HasColumnType("integer");

                    b.Property<int>("tag_id")
                        .HasColumnType("integer");

                    b.HasKey("expense_id", "tag_id");

                    b.HasIndex("tag_id");

                    b.ToTable("expense_tags");
                });

            modelBuilder.Entity("CashTrack.Data.Entities.IncomeCategories", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("id");

                    b.ToTable("income_categories");
                });

            modelBuilder.Entity("CashTrack.Data.Entities.Incomes", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<decimal>("amount")
                        .HasColumnType("numeric");

                    b.Property<int?>("categoryid")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("income_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("notes")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int?>("sourceid")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("categoryid");

                    b.HasIndex("sourceid");

                    b.ToTable("incomes");
                });

            modelBuilder.Entity("CashTrack.Data.Entities.IncomeSources", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("source")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("id");

                    b.ToTable("income_sources");
                });

            modelBuilder.Entity("CashTrack.Data.Entities.Merchants", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("city")
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("state")
                        .HasColumnType("text");

                    b.Property<bool>("suggest_on_lookup")
                        .HasColumnType("boolean");

                    b.HasKey("id");

                    b.ToTable("merchants");
                });

            modelBuilder.Entity("CashTrack.Data.Entities.Tags", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("tag_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("id");

                    b.ToTable("tags");
                });

            modelBuilder.Entity("CashTrack.Data.Entities.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("first_name")
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<string>("last_name")
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<string>("password_hash")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("users");

                    b.HasData(
                        new
                        {
                            id = 1,
                            email = "Mitchellscott@me.com",
                            first_name = "Test",
                            last_name = "User",
                            password_hash = "$2a$11$P2H/JZsVKaj9nGzOan0K9uZGKaFh6AXer8JrCYwQjrkNlXhCvhPmy"
                        });
                });

            modelBuilder.Entity("CashTrack.Data.Entities.Expenses", b =>
                {
                    b.HasOne("CashTrack.Data.Entities.ExpenseSubCategories", "category")
                        .WithMany("expenses")
                        .HasForeignKey("categoryid");

                    b.HasOne("CashTrack.Data.Entities.Merchants", "merchant")
                        .WithMany("expenses")
                        .HasForeignKey("merchantid");

                    b.Navigation("category");

                    b.Navigation("merchant");
                });

            modelBuilder.Entity("CashTrack.Data.Entities.ExpenseSubCategories", b =>
                {
                    b.HasOne("CashTrack.Data.Entities.ExpenseMainCategories", "main_category")
                        .WithMany("sub_categories")
                        .HasForeignKey("main_categoryid");

                    b.Navigation("main_category");
                });

            modelBuilder.Entity("CashTrack.Data.Entities.ExpenseTags", b =>
                {
                    b.HasOne("CashTrack.Data.Entities.Expenses", "expense")
                        .WithMany("expense_tags")
                        .HasForeignKey("expense_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CashTrack.Data.Entities.Tags", "tag")
                        .WithMany("expense_tags")
                        .HasForeignKey("tag_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("expense");

                    b.Navigation("tag");
                });

            modelBuilder.Entity("CashTrack.Data.Entities.Incomes", b =>
                {
                    b.HasOne("CashTrack.Data.Entities.IncomeCategories", "category")
                        .WithMany()
                        .HasForeignKey("categoryid");

                    b.HasOne("CashTrack.Data.Entities.IncomeSources", "source")
                        .WithMany()
                        .HasForeignKey("sourceid");

                    b.Navigation("category");

                    b.Navigation("source");
                });

            modelBuilder.Entity("CashTrack.Data.Entities.ExpenseMainCategories", b =>
                {
                    b.Navigation("sub_categories");
                });

            modelBuilder.Entity("CashTrack.Data.Entities.Expenses", b =>
                {
                    b.Navigation("expense_tags");
                });

            modelBuilder.Entity("CashTrack.Data.Entities.ExpenseSubCategories", b =>
                {
                    b.Navigation("expenses");
                });

            modelBuilder.Entity("CashTrack.Data.Entities.Merchants", b =>
                {
                    b.Navigation("expenses");
                });

            modelBuilder.Entity("CashTrack.Data.Entities.Tags", b =>
                {
                    b.Navigation("expense_tags");
                });
#pragma warning restore 612, 618
        }
    }
}
