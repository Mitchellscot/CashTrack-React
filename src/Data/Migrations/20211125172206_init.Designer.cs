// <auto-generated />
using System;
using CashTrack.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace CashTrack.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20211125172206_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("CashTrack.Data.Entities.ExpenseMainCategories", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Category")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("ExpenseMainCategories");
                });

            modelBuilder.Entity("CashTrack.Data.Entities.ExpenseSubCategories", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<bool>("InUse")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("expense_sub_categories");
                });

            modelBuilder.Entity("CashTrack.Data.Entities.Expenses", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<bool>("ExcludeFromStatistics")
                        .HasColumnType("boolean");

                    b.Property<int?>("MerchantId")
                        .HasColumnType("integer");

                    b.Property<string>("Notes")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("MerchantId");

                    b.ToTable("expenses");
                });

            modelBuilder.Entity("CashTrack.Data.Entities.IncomeCategories", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Category")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("income_categories");
                });

            modelBuilder.Entity("CashTrack.Data.Entities.IncomeSources", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("IncomeCategoriesId")
                        .HasColumnType("integer");

                    b.Property<string>("Source")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.HasIndex("IncomeCategoriesId");

                    b.ToTable("income_sources");
                });

            modelBuilder.Entity("CashTrack.Data.Entities.Incomes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("IncomeDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Notes")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int?>("SourceId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("SourceId");

                    b.ToTable("incomes");
                });

            modelBuilder.Entity("CashTrack.Data.Entities.Merchants", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("State")
                        .HasColumnType("text");

                    b.Property<bool>("SuggestOnLookup")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("merchants");
                });

            modelBuilder.Entity("CashTrack.Data.Entities.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("TagName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("tags");
                });

            modelBuilder.Entity("CashTrack.Data.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "Mitchellscott@me.com",
                            FirstName = "Mitchell",
                            LastName = "Scott",
                            PasswordHash = "$2a$11$28fuCkUfNz/MmdAGL7B14OymXydAY6HsrYCtVIB6WF1VRtaNi3v2q"
                        },
                        new
                        {
                            Id = 2,
                            Email = "Sarahlscott@me.com",
                            FirstName = "Sarah",
                            LastName = "Scott",
                            PasswordHash = "$2a$11$LMw20ZMcJzZUHqJNRxl6S.vmSCrD9ums8c17STCH6TU3L2Y.C0x0S"
                        });
                });

            modelBuilder.Entity("ExpensesTag", b =>
                {
                    b.Property<int>("ExpensesId")
                        .HasColumnType("integer");

                    b.Property<int>("TagsId")
                        .HasColumnType("integer");

                    b.HasKey("ExpensesId", "TagsId");

                    b.HasIndex("TagsId");

                    b.ToTable("ExpensesTag");
                });

            modelBuilder.Entity("CashTrack.Data.Entities.ExpenseSubCategories", b =>
                {
                    b.HasOne("CashTrack.Data.Entities.ExpenseMainCategories", "Category")
                        .WithMany("SubCategories")
                        .HasForeignKey("CategoryId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("CashTrack.Data.Entities.Expenses", b =>
                {
                    b.HasOne("CashTrack.Data.Entities.ExpenseSubCategories", "Category")
                        .WithMany("Expenses")
                        .HasForeignKey("CategoryId");

                    b.HasOne("CashTrack.Data.Entities.Merchants", "Merchant")
                        .WithMany("Expenses")
                        .HasForeignKey("MerchantId");

                    b.Navigation("Category");

                    b.Navigation("Merchant");
                });

            modelBuilder.Entity("CashTrack.Data.Entities.IncomeSources", b =>
                {
                    b.HasOne("CashTrack.Data.Entities.IncomeCategories", null)
                        .WithMany("IncomeSource")
                        .HasForeignKey("IncomeCategoriesId");
                });

            modelBuilder.Entity("CashTrack.Data.Entities.Incomes", b =>
                {
                    b.HasOne("CashTrack.Data.Entities.IncomeCategories", "Category")
                        .WithMany("Income")
                        .HasForeignKey("CategoryId");

                    b.HasOne("CashTrack.Data.Entities.IncomeSources", "Source")
                        .WithMany()
                        .HasForeignKey("SourceId");

                    b.Navigation("Category");

                    b.Navigation("Source");
                });

            modelBuilder.Entity("ExpensesTag", b =>
                {
                    b.HasOne("CashTrack.Data.Entities.Expenses", null)
                        .WithMany()
                        .HasForeignKey("ExpensesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CashTrack.Data.Entities.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CashTrack.Data.Entities.ExpenseMainCategories", b =>
                {
                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("CashTrack.Data.Entities.ExpenseSubCategories", b =>
                {
                    b.Navigation("Expenses");
                });

            modelBuilder.Entity("CashTrack.Data.Entities.IncomeCategories", b =>
                {
                    b.Navigation("Income");

                    b.Navigation("IncomeSource");
                });

            modelBuilder.Entity("CashTrack.Data.Entities.Merchants", b =>
                {
                    b.Navigation("Expenses");
                });
#pragma warning restore 612, 618
        }
    }
}
