// <auto-generated />
using System;
using CashTrack.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CashTrack.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CashTrack.Data.Entities.ExpenseMainCategories", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("expense-main-categories");
                });

            modelBuilder.Entity("CashTrack.Data.Entities.Expenses", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<bool>("ExcludeFromStatistics")
                        .HasColumnType("boolean");

                    b.Property<int?>("MerchantId")
                        .HasColumnType("integer");

                    b.Property<string>("Notes")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("MerchantId");

                    b.ToTable("expenses");
                });

            modelBuilder.Entity("CashTrack.Data.Entities.ExpenseSubCategories", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<bool>("InUse")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("expense-sub-categories");
                });

            modelBuilder.Entity("CashTrack.Data.Entities.ExpenseTags", b =>
                {
                    b.Property<int>("ExpenseId")
                        .HasColumnType("integer");

                    b.Property<int>("TagId")
                        .HasColumnType("integer");

                    b.HasKey("ExpenseId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("expense-tags");
                });

            modelBuilder.Entity("CashTrack.Data.Entities.IncomeCategories", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("income-categories");
                });

            modelBuilder.Entity("CashTrack.Data.Entities.Incomes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("IncomeDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Notes")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int?>("SourceId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("SourceId");

                    b.ToTable("incomes");
                });

            modelBuilder.Entity("CashTrack.Data.Entities.IncomeSources", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("income-sources");
                });

            modelBuilder.Entity("CashTrack.Data.Entities.Merchants", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("State")
                        .HasColumnType("text");

                    b.Property<bool>("SuggestOnLookup")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("merchants");
                });

            modelBuilder.Entity("CashTrack.Data.Entities.Tags", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("TagName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("tags");
                });

            modelBuilder.Entity("CashTrack.Data.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "Mitchellscott@me.com",
                            FirstName = "Mitchell",
                            LastName = "Scott",
                            PasswordHash = "$2a$11$36C19UjjGPuk5R25MR6DouUx2WcQ7LMoQhdQQYBIgUoEv8tL/pbkW"
                        },
                        new
                        {
                            Id = 2,
                            Email = "Sarahlscott@me.com",
                            FirstName = "Sarah",
                            LastName = "Scott",
                            PasswordHash = "$2a$11$iOtc3zz6D1lIZ6Vl7AfgB.4ZhRi4SOogozOQHe3xx9iAYFkCMGUre"
                        });
                });

            modelBuilder.Entity("CashTrack.Data.Entities.Expenses", b =>
                {
                    b.HasOne("CashTrack.Data.Entities.ExpenseSubCategories", "Category")
                        .WithMany("Expenses")
                        .HasForeignKey("CategoryId");

                    b.HasOne("CashTrack.Data.Entities.Merchants", "Merchant")
                        .WithMany("Expenses")
                        .HasForeignKey("MerchantId");

                    b.Navigation("Category");

                    b.Navigation("Merchant");
                });

            modelBuilder.Entity("CashTrack.Data.Entities.ExpenseSubCategories", b =>
                {
                    b.HasOne("CashTrack.Data.Entities.ExpenseMainCategories", "Category")
                        .WithMany("SubCategories")
                        .HasForeignKey("CategoryId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("CashTrack.Data.Entities.ExpenseTags", b =>
                {
                    b.HasOne("CashTrack.Data.Entities.Expenses", "Expense")
                        .WithMany("ExpenseTags")
                        .HasForeignKey("ExpenseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CashTrack.Data.Entities.Tags", "Tag")
                        .WithMany("ExpenseTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Expense");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("CashTrack.Data.Entities.Incomes", b =>
                {
                    b.HasOne("CashTrack.Data.Entities.IncomeCategories", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.HasOne("CashTrack.Data.Entities.IncomeSources", "Source")
                        .WithMany()
                        .HasForeignKey("SourceId");

                    b.Navigation("Category");

                    b.Navigation("Source");
                });

            modelBuilder.Entity("CashTrack.Data.Entities.ExpenseMainCategories", b =>
                {
                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("CashTrack.Data.Entities.Expenses", b =>
                {
                    b.Navigation("ExpenseTags");
                });

            modelBuilder.Entity("CashTrack.Data.Entities.ExpenseSubCategories", b =>
                {
                    b.Navigation("Expenses");
                });

            modelBuilder.Entity("CashTrack.Data.Entities.Merchants", b =>
                {
                    b.Navigation("Expenses");
                });

            modelBuilder.Entity("CashTrack.Data.Entities.Tags", b =>
                {
                    b.Navigation("ExpenseTags");
                });
#pragma warning restore 612, 618
        }
    }
}
